import { CommonValidatorBuilderImpl, NumberValidatorBuilder, ValidationOptionsBuilder } from "./";
import { ValidationRule } from "../validation";
export declare class NumberValidatorBuilderImpl<T> extends CommonValidatorBuilderImpl<T, number> implements NumberValidatorBuilder<T> {
    constructor(validationRule: ValidationRule<T, number | Iterable<number>>);
    private buildRuleWith(validator);
    isPositive(): this & ValidationOptionsBuilder<T>;
    isNegative(): this & ValidationOptionsBuilder<T>;
    isGreaterThan(threshold: number): this & ValidationOptionsBuilder<T>;
    isGreaterThanOrEqual(threshold: number): this & ValidationOptionsBuilder<T>;
    isLessThan(threshold: number): this & ValidationOptionsBuilder<T>;
    isLessThanOrEqual(threshold: number): this & ValidationOptionsBuilder<T>;
}
